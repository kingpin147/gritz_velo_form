
import wixData from 'wix-data';
import wixLocation from 'wix-location';
import wixUsers from 'wix-users';
import { authentication, currentMember } from "wix-members-frontend";
import  {myAssignRoleFunction} from "backend/roles.web"


$w.onReady(function () {
  // Attach event listener to the submit button.
  $w('#submitButton').onClick(async () => {
    // Ensure the user is logged in.
    const user = wixUsers.currentUser;
    if (!user.loggedIn) {
      console.error("User not logged in.");
      return;
    }
    const memberId = user.id;
    
    // Validate that all required (visible) fields are filled.
    if (!validateForm()) {
      console.error("Validation failed. Please fill in all required fields.");
      return;
    }
    
    // Determine member type using the appropriate dropdown field(s).
    let memberType = "";
    if ($w("#dropdown1").value === "SopirPengiriman" || $w("#dropdown1").value === "Grosir") {
      memberType = $w("#dropdown1").value;
    } else if ($w("#dropdown4").value) {
      memberType = $w("#dropdown4").value;
    } else if ($w("#dropdown2").value) {
      memberType = $w("#dropdown2").value;
    } else {
      console.error("No valid member type selected.");
      return;
    }
    
    // Build the formData object based on member type.
    let formData = { memberId: memberId };
    switch (memberType) {
      case "SopirPengiriman": // Drivers
        formData.memberType = memberType;
        formData.name = $w("#input5").value;
        formData.password = $w("#input1").value;
        formData.email = $w("#input2").value;
        formData.phoneNumber = $w("#input8").value;
        formData.ktp = $w("#input4").value;
       // formData.ktpUpload = $w("#uploadbutton1").value; // Assumes file upload returns a valid value
        formData.simNumber = $w("#input10").value;
        formData.addedBy = $w("#dropdown5").value;
        break;
      case "RoomService(TidakDapur)":
        formData.memberType = memberType;
        formData.hotelName = $w("#input14").value;
        formData.email = $w("#input2").value;
        formData.password = $w("#input1").value;
        formData.name = $w("#input5").value;
        formData.managersPhone = $w("#input8").value;
        formData.hotelAddress = $w("#addressInput1").value;
        formData.hotelPhoneNumber = $w("#input13").value;
        formData.restaurant = $w("#dropdown6").value;
        break;
      case "Konsultasi":
        formData.memberType = memberType;
        formData.name = $w("#input14").value; // For Konsultasi, name comes from #input14.
        formData.name1 = $w("#input11").value;
        formData.email = $w("#input2").value;
        formData.password = $w("#input1").value;
        formData.phone = $w("#input8").value;
        formData.location = $w("#dropdown7").value;
        formData.address = $w("#addressInput1").value;
        break;
      case "MenyewaDanMengoperasikan(Dapur)":
        formData.memberType = memberType;
        formData.hotelName = $w("#input14").value;
        formData.email = $w("#input2").value;
        formData.password = $w("#input1").value;
        formData.name = $w("#input5").value;
        formData.managersPhoneNumber = $w("#input8").value;
        formData.hotelAddress = $w("#addressInput1").value;
        formData.hotelPhoneNumber = $w("#input13").value;
        formData.restaurant = $w("#dropdown6").value;
        break;
      case "Grosir":
        formData.memberType = memberType;
        formData.name = $w("#input5").value;
        formData.email = $w("#input2").value;
        formData.password = $w("#input1").value;
        formData.phone = $w("#input8").value;
        formData.ktp = $w("#input4").value;
        formData.address = $w("#addressInput1").value;
        formData.npwp = $w("#input15").value;
        break;
      case "Menyewakan":
        formData.memberType = memberType;
        formData.restaurantName = $w("#input11").value;
        formData.name = $w("#input5").value;
        formData.email = $w("#input2").value;
        formData.password = $w("#input1").value;
        formData.phone = $w("#input8").value;
        formData.address = $w("#addressInput1").value;
        break;
      case "Waralaba":
        formData.memberType = memberType;
        formData.namaWaralaba = $w("#input16").value;
        formData.waralabaType = $w("#dropdown3").value;
        formData.name = $w("#input5").value;
        formData.email = $w("#input2").value;
        formData.password = $w("#input1").value;
        formData.phone = $w("#input8").value;
        formData.lastName = $w("#input17").value;
        break;
      default:
        console.error("Member type not recognized:", memberType);
        return;
    }
    
    // Determine the correct collection name.
    const collectionName = getCollectionName(memberType);
    if (!collectionName) {
      console.error("Invalid member type selected:", memberType);
      return;
    }
    
    // Insert the data into the appropriate collection.
    try {
      await wixData.insert(collectionName, formData);
      console.log(`Data successfully saved to ${collectionName}`);
    } catch (err) {
      console.error("Error saving data:", err);
      return;
    }
    
    // Define role mappings.
    const roles = {
      "SopirPengiriman": "b93ce41d-bb23-4463-8bf9-be82adf8ab04",
      "RoomService(TidakDapur)": "d034ccff-11df-4556-91bf-2aabe2edaf97",
      "MenyewaDanMengoperasikan(Dapur)": "6b77bc33-c9ef-4945-b492-56de48ab56ba",
      "Grosir": "017520b5-a945-4515-a14d-ef3bd9e43524",
      "Konsultasi": "30044550-09b4-4c68-b85e-8178428a5ee1",
      "Waralaba": "b11c1560-4d1b-4f8a-a821-563d2af040a8",
      "Menyewakan": "4b464763-5bec-45f2-a655-cfb0731b0706"
    };
    const roleId = roles[memberType];
    
    // Assign the role using Wix Users API.
    try {
      let result= await myAssignRoleFunction(roleId, memberId);
      console.log("Role assigned successfully:", roleId), result;
    } catch (err) {
      console.error("Error assigning role:", err);
    }
    
    // Now update the member's record in the collection with the role value.
    try {
      let queryResult = await wixData.query(collectionName)
        .eq("memberIdField1", memberId)
        .find();
      if (queryResult.items.length > 0) {
        let memberItem = queryResult.items[0];
        memberItem.memberRole = roleId; // Update the field "memberRole"
        await wixData.update(collectionName, memberItem);
        console.log("Member role updated in collection.");
      } else {
        console.error("Member item not found in", collectionName);
      }
    } catch (err) {
      console.error("Error updating member role:", err);
    }
    
    // Redirect based on member type.
    redirectToNextStep(memberType);
  });
});

function validateForm() {
  // List of required fields (adjust as necessary)
  const requiredFields = ["#inputFirstName", "#inputLastName", "#inputEmail", "#inputPhone"];
  let valid = true;
  requiredFields.forEach(f => {
    const el = $w(f);
    if (!el.hidden && (!el.value || el.value === "")) {
      el.focus();
      valid = false;
    }
  });
  return valid;
}

function getCollectionName(memberType) {
  switch (memberType) {
    case "SopirPengiriman":
      return "Drivers";
    case "RoomService(TidakDapur)":
      return "RoomService";
    case "Konsultasi":
      return "Consultation";
    case "MenyewaDanMengoperasikan(Dapur)":
      return "RentAndOperate";
    case "Grosir":
      return "Wholesale";
    case "Menyewakan":
      return "RentalInformation";
    case "Waralaba":
      return "Franchise";
    default:
      return null;
  }
}

function redirectToNextStep(memberType) {
  switch (memberType) {
    case "SopirPengiriman":
      wixLocation.to("/daftar-pertanyaan/sopir-pengiriman");
      break;
    case "RoomService(TidakDapur)":
      wixLocation.to("/daftar-pertanyaan/roomservice3");
      break;
    case "MenyewaDanMengoperasikan(Dapur)":
      wixLocation.to("/daftar-pertanyaan/mengoperasikan");
      break;
    case "Menyewakan":
      wixLocation.to("/daftar-pertanyaan/menyewakan");
      break;
    case "Konsultasi":
      wixLocation.to("/daftar-pertanyaan/konsultasi1");
      break;
    case "Waralaba":
      wixLocation.to("/daftar-pertanyaan/pemilik-waralaba");
      break;
    case "Grosir":
      wixLocation.to("/akun-grosir");
      break;
    default:
      wixLocation.to("/default-second-form");
  }
}
